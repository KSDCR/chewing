/*buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}*/

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'io.web'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {


    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    testImplementation 'org.projectlombok:lombok:1.18.22'
    testImplementation 'junit:junit:4.13.1'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0'

    /*implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"*/

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testAnnotationProcessor 'org.projectlombok:lombok'
    annotationProcessor(

            "javax.persistence:javax.persistence-api",

            "javax.annotation:javax.annotation-api",

            /*"com.querydsl:querydsl-apt:${queryDslVersion}:jpa"*/
    )
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'


    //Jwt 오류(io.jsonwebtoken.lang.UnknownClassException 해결을 위해 추가한 의존성
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-gson
    implementation group: 'io.jsonwebtoken', name: 'jjwt-gson', version: '0.11.2'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'


    implementation 'org.modelmapper:modelmapper:3.1.0'


    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.0'

    // @NotNull 이슈 해결위해 추가 의존성
    implementation 'org.hibernate:hibernate-validator:7.0.5.Final'



    //Querydsl 5.0버전이상 관련 의존성
    implementation("com.querydsl:querydsl-core") // querydsl
    implementation("com.querydsl:querydsl-jpa") // querydsl
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    //Querydsl 5.0버전이상 관련 의존성끝
}

tasks.named('test') {
    useJUnitPlatform()
}

//Querydsl 설정
apply plugin: "io.spring.dependency-management"
def generated = 'src/main/generated'
sourceSets {
    main.java.srcDirs += [generated]
}
tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}
clean.doLast {
    file(generated).deleteDir()
}
//Querydsl 설정끝